name: Issue Labeler

on:
  issues:
    types: [ opened, edited, reopened, transferred ]

permissions:
  issues: write
  contents: read

jobs:
  ensure-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure common labels exist
        uses: actions/github-script@v8
        with:
          script: |
            const labels = [
              {name: 'bug', color: 'd73a4a', description: 'Something is not working'},
              {name: 'enhancement', color: 'a2eeef', description: 'New feature or request'},
              {name: 'scorm-12', color: '0e8a16', description: 'SCORM 1.2 related'},
              {name: 'scorm-2004', color: '0e8a16', description: 'SCORM 2004 related'},
              {name: 'aicc', color: '5319e7', description: 'AICC related'},
              {name: 'cmi5', color: 'c5def5', description: 'cmi5 related'},
              {name: 'backend-zip', color: 'fef2c0', description: 'Zip backend'},
              {name: 'backend-s3', color: 'f9d0c4', description: 'AWS S3 backend'},
              {name: 'backend-local', color: 'c2e0c6', description: 'Local file backend'},
              {name: 'area-factory', color: 'b60205', description: 'Factory/creation logic'},
              {name: 'area-detection', color: '1d76db', description: 'Module type detection'},
              {name: 'area-parsers', color: '5319e7', description: 'Parser implementations'},
              {name: 'area-input', color: '0052cc', description: 'Input models/ingest'},
              {name: 'area-output', color: 'fbca04', description: 'Output/metadata'}
            ];
            const existing = await github.paginate(
              github.rest.issues.listLabelsForRepo,
              { owner: context.repo.owner, repo: context.repo.repo, per_page: 100 }
            );
            const byName = new Map(existing.map(l => [l.name.toLowerCase(), l]));
            for (const l of labels) {
              if (!byName.has(l.name.toLowerCase())) {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: l.name,
                  color: l.color,
                  description: l.description
                });
              }
            }

  apply-labels:
    needs: ensure-labels
    runs-on: ubuntu-latest
    steps:
      - name: Apply labels based on content
        uses: github/issue-labeler@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
          enable-versioned-regex: false
          sync-labels: false

