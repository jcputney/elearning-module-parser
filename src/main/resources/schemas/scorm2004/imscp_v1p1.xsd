<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xsd:schema xmlns = "http://www.imsglobal.org/xsd/imscp_v1p1"
	 targetNamespace = "http://www.imsglobal.org/xsd/imscp_v1p1"
	 xmlns:xsd = "http://www.w3.org/2001/XMLSchema"
	 version = "IMS CP 1.1.3"
	 elementFormDefault = "unqualified">
	<xsd:import namespace = "http://www.w3.org/XML/1998/namespace" schemaLocation = "xml.xsd"/>
	<xsd:annotation>
		<xsd:documentation>IMS CP 1.1 (local copy for validation)</xsd:documentation>
	</xsd:annotation>

	<!-- ************************** -->
	<!-- ** Group Declarations  ** -->
	<!-- ************************** -->

	<xsd:group name = "grp.any">
		<xsd:annotation>
			<xsd:documentation>Any namespaced element from any namespace may be included within an "any" element.  The namespace for the imported element must be defined in the instance, and the schema must be imported.  </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:any namespace = "##other" processContents = "lax" minOccurs = "0" maxOccurs = "unbounded"/>
		</xsd:sequence>
	</xsd:group>

	<!-- **************************** -->
	<!-- ** Attribute Declarations ** -->
	<!-- **************************** -->

	<xsd:attributeGroup name = "attr.base">
		<xsd:attribute ref = "xml:base"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.default">
		<xsd:attribute name = "default" type = "xsd:IDREF"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.href">
		<xsd:attribute name = "href" type = "xsd:anyURI"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.href.req">
		<xsd:attribute name = "href" use = "required" type = "xsd:anyURI"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.identifier.req">
		<xsd:attribute name = "identifier" use = "required" type = "xsd:ID"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.identifier">
		<xsd:attribute name = "identifier" type = "xsd:ID"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.isvisible">
		<xsd:attribute name = "isvisible" type = "xsd:boolean"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.parameters">
		<xsd:attribute name = "parameters" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.identifierref">
		<xsd:attribute name = "identifierref" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.identifierref.req">
		<xsd:attribute name = "identifierref" use = "required" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.resourcetype.req">
		<xsd:attribute name = "type" use = "required" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.structure.req">
		<xsd:attribute name = "structure" default = "hierarchical" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.version">
		<xsd:attribute name = "version" type = "xsd:string"/>
	</xsd:attributeGroup>

	<!-- ************************** -->
	<!-- ** Element Declarations ** -->
	<!-- ************************** -->

	<xsd:element name = "dependency" type = "dependencyType"/>
	<xsd:element name = "file" type = "fileType"/>
	<xsd:element name = "item" type = "itemType"/>
	<xsd:element name = "manifest" type = "manifestType"/>
	<xsd:element name = "metadata" type = "metadataType"/>
	<xsd:element name = "organization" type = "organizationType"/>
	<xsd:element name = "organizations" type = "organizationsType"/>
	<xsd:element name = "resource" type = "resourceType"/>
	<xsd:element name = "resources" type = "resourcesType"/>
	<xsd:element name = "schema" type = "schemaType"/>
	<xsd:element name = "schemaversion" type = "schemaversionType"/>
	<xsd:element name = "title" type = "titleType"/>

	<!-- ******************* -->
	<!-- ** Complex Types ** -->
	<!-- ******************* -->

	<xsd:complexType name = "dependencyType">
		<xsd:sequence>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifierref.req"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>

	<xsd:complexType name = "fileType">
		<xsd:sequence>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.href.req"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>

	<xsd:complexType name = "itemType">
		<xsd:sequence>
			<xsd:element ref = "title" minOccurs = "0"/>
			<xsd:element ref = "item" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifier.req"/>
		<xsd:attributeGroup ref = "attr.identifierref"/>
		<xsd:attributeGroup ref = "attr.isvisible"/>
		<xsd:attributeGroup ref = "attr.parameters"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>

	<xsd:complexType name = "manifestType">
		<xsd:sequence>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:element ref = "organizations"/>
			<xsd:element ref = "resources"/>
			<xsd:element ref = "manifest" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifier.req"/>
		<xsd:attributeGroup ref = "attr.version"/>
		<xsd:attribute ref = "xml:base"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>

	<xsd:complexType name = "metadataType">
		<xsd:sequence>
			<xsd:element ref = "schema" minOccurs = "0"/>
			<xsd:element ref = "schemaversion" minOccurs = "0"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name = "organizationsType">
		<xsd:sequence>
			<xsd:element ref = "organization" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.default"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>

	<xsd:complexType name = "organizationType">
		<xsd:sequence>
			<xsd:element ref = "title" minOccurs = "0"/>
			<xsd:element ref = "item" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifier.req"/>
		<xsd:attributeGroup ref = "attr.structure.req"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>

	<xsd:complexType name = "resourcesType">
		<xsd:sequence>
			<xsd:element ref = "resource" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.base"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>

	<xsd:complexType name = "resourceType">
		<xsd:sequence>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:element ref = "file" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:element ref = "dependency" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifier.req"/>
		<xsd:attributeGroup ref = "attr.resourcetype.req"/>
		<xsd:attributeGroup ref = "attr.base"/>
		<xsd:attributeGroup ref = "attr.href"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>

	<!-- ****************** -->
	<!-- ** Simple Types ** -->
	<!-- ****************** -->

	<xsd:simpleType name = "schemaType">
		<xsd:restriction base = "xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name = "schemaversionType">
		<xsd:restriction base = "xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name = "titleType">
		<xsd:restriction base = "xsd:string"/>
	</xsd:simpleType>

</xsd:schema>
